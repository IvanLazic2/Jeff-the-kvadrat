class Level1
{
	field Character character;
	field Finish finish;
	field int PlatformsCount;
	field int ObstaclesCount;
	field int EnemiesCount;
	field int CollectablesCount;
	field Array Platforms;
	field Array Obstacles;
	field Array Enemies;
	field Array Collectables;
	field Array Map;
	field int MapWidth;
	field int MapHeight;
	constructor Level1 new()
	{
		var int i;
		let character = Character.new(2, 200);
		let finish = Finish.new(58, 224);
		let PlatformsCount = 5;
		let ObstaclesCount = 0;
		let EnemiesCount = 1;
		let CollectablesCount = 0;
		let Platforms = Array.new(5);
		let Platforms[0] = Platform.new(17, 176, 0, 5);
		let Platforms[1] = Platform.new(8, 192, 0, 6);
		let Platforms[2] = Platform.new(30, 224, 0, 1);
		let Platforms[3] = Platform.new(50, 224, 0, 1);
		let Platforms[4] = Platform.new(0, 240, 0, 67);
		let Enemies = Array.new(1);
		let Enemies[0] = Enemy.new(36, 224, 0);
		let MapWidth = 128;
		let MapHeight = 16;
		let Map = Array.new(MapWidth * MapHeight);
		while (i < (MapWidth * MapHeight))
		{
			let Map[i] = 0;
			let i = i + 1;
		}
		let Map[15] = 1;
		let Map[31] = 1;
		let Map[47] = 1;
		let Map[63] = 1;
		let Map[79] = 1;
		let Map[95] = 1;
		let Map[111] = 1;
		let Map[127] = 1;
		let Map[140] = 1;
		let Map[143] = 1;
		let Map[156] = 1;
		let Map[159] = 1;
		let Map[172] = 1;
		let Map[175] = 1;
		let Map[188] = 1;
		let Map[191] = 1;
		let Map[204] = 1;
		let Map[207] = 1;
		let Map[220] = 1;
		let Map[223] = 1;
		let Map[239] = 1;
		let Map[255] = 1;
		let Map[271] = 1;
		let Map[283] = 1;
		let Map[287] = 1;
		let Map[299] = 1;
		let Map[303] = 1;
		let Map[315] = 1;
		let Map[319] = 1;
		let Map[331] = 1;
		let Map[335] = 1;
		let Map[347] = 1;
		let Map[351] = 1;
		let Map[367] = 1;
		let Map[383] = 1;
		let Map[399] = 1;
		let Map[415] = 1;
		let Map[431] = 1;
		let Map[447] = 1;
		let Map[463] = 1;
		let Map[479] = 1;
		let Map[494] = 1;
		let Map[495] = 1;
		let Map[511] = 1;
		let Map[527] = 1;
		let Map[543] = 1;
		let Map[559] = 1;
		let Map[575] = 1;
		let Map[591] = 1;
		let Map[607] = 1;
		let Map[623] = 1;
		let Map[639] = 1;
		let Map[655] = 1;
		let Map[671] = 1;
		let Map[687] = 1;
		let Map[703] = 1;
		let Map[719] = 1;
		let Map[735] = 1;
		let Map[751] = 1;
		let Map[767] = 1;
		let Map[783] = 1;
		let Map[799] = 1;
		let Map[814] = 1;
		let Map[815] = 1;
		let Map[831] = 1;
		let Map[847] = 1;
		let Map[863] = 1;
		let Map[879] = 1;
		let Map[895] = 1;
		let Map[911] = 1;
		let Map[927] = 1;
		let Map[943] = 1;
		let Map[959] = 1;
		let Map[975] = 1;
		let Map[991] = 1;
		let Map[1007] = 1;
		let Map[1023] = 1;
		let Map[1039] = 1;
		let Map[1055] = 1;
		let Map[1071] = 1;
		return this;
	}
	method int getPlatformsCount() { return PlatformsCount; }
	method int getObstaclesCount() { return ObstaclesCount; }
	method int getEnemiesCount() { return EnemiesCount; }
	method int getCollectablesCount() { return CollectablesCount; }
	method Array getPlatforms() { return Platforms; }
	method Array getObstacles() { return Obstacles; }
	method Array getEnemies() { return Enemies; }
	method Array getCollectables() { return Collectables; }
	method Character getCharacter() { return character; }
	method int getFinish() { return finish; }
	method Array getMap() { return Map; }
	method int getMapWidth() { return MapWidth; }
	method int getMapHeight() { return MapHeight; }
	method void dispose()
	{
		var int i;
		var Platform platform;
		var Obstacle obstacle;
		var Enemy enemy;
		var Collectable collectable;
		do character.dispose();
		do finish.dispose();
		while (i < PlatformsCount)
		{
			let platform = Platforms[i];
			do platform.dispose();
			let i = i + 1;
		}
		let i = 0;
		while (i < ObstaclesCount)
		{
			let obstacle = Obstacles[i];
			do obstacle.dispose();
			let i = i + 1;
		}
		let i = 0;
		while (i < EnemiesCount)
		{
			let enemy = Enemies[i];
			do enemy.dispose();
			let i = i + 1;
		}
		let i = 0;
		while (i < CollectablesCount)
		{
			let collectable = Collectables[i];
			do collectable.dispose();
			let i = i + 1;
		}
		if (~(PlatformsCount = 0))
		{
			do Platforms.dispose();
		}
		if (~(ObstaclesCount = 0))
		{
			do Obstacles.dispose();
		}
		if (~(EnemiesCount = 0))
		{
			do Enemies.dispose();
		}
		if (~(CollectablesCount = 0))
		{
			do Collectables.dispose();
		}
		do Map.dispose();
		do Memory.deAlloc(this);
	return;
	}
}
