class Level1
{
	field Character character;
	field Finish finish;
	field int PlatformsCount;
	field int ObstaclesCount;
	field int EnemiesCount;
	field int CollectablesCount;
	field Array Platforms;
	field Array Obstacles;
	field Array Enemies;
	field Array Collectables;
	field Array Map;
	field int MapWidth;
	field int MapHeight;
	constructor Level1 new()
	{
		var int i;
		let character = Character.new(3, 200, false);
		let finish = Finish.new(127, 224);
		let PlatformsCount = 3;
		let ObstaclesCount = 0;
		let EnemiesCount = 1;
		let CollectablesCount = 6;
		let Platforms = Array.new(3);
		do MemoryExt.poke(Platforms, 0, Platform.new(20, 128, 0, 5));
		do MemoryExt.poke(Platforms, 1, Platform.new(10, 176, 0, 6));
		do MemoryExt.poke(Platforms, 2, Platform.new(0, 240, 0, 32));
		let Enemies = Array.new(1);
		do MemoryExt.poke(Enemies, 0, Enemy.new(14, 160, 4));
		let Collectables = Array.new(6);
		do MemoryExt.poke(Collectables, 0, Collectable.new(11, 224, 0));
		do MemoryExt.poke(Collectables, 1, Collectable.new(15, 224, 1));
		do MemoryExt.poke(Collectables, 2, Collectable.new(18, 224, 0));
		do MemoryExt.poke(Collectables, 3, Collectable.new(22, 224, 1));
		do MemoryExt.poke(Collectables, 4, Collectable.new(24, 224, 0));
		do MemoryExt.poke(Collectables, 5, Collectable.new(27, 224, 1));
		let MapWidth = 128;
		let MapHeight = 16;
		let Map = Array.new(2048);
		while (i < 2048)
		{
			let Map[i] = 0;
			let i = i + 1;
		}
		do MemoryExt.poke(Map, 15, 1);
		do MemoryExt.poke(Map, 31, 1);
		do MemoryExt.poke(Map, 47, 1);
		do MemoryExt.poke(Map, 63, 1);
		do MemoryExt.poke(Map, 79, 1);
		do MemoryExt.poke(Map, 95, 1);
		do MemoryExt.poke(Map, 111, 1);
		do MemoryExt.poke(Map, 127, 1);
		do MemoryExt.poke(Map, 143, 1);
		do MemoryExt.poke(Map, 159, 1);
		do MemoryExt.poke(Map, 171, 1);
		do MemoryExt.poke(Map, 175, 1);
		do MemoryExt.poke(Map, 187, 1);
		do MemoryExt.poke(Map, 190, 16);
		do MemoryExt.poke(Map, 191, 1);
		do MemoryExt.poke(Map, 203, 1);
		do MemoryExt.poke(Map, 207, 1);
		do MemoryExt.poke(Map, 219, 1);
		do MemoryExt.poke(Map, 223, 1);
		do MemoryExt.poke(Map, 235, 1);
		do MemoryExt.poke(Map, 239, 1);
		do MemoryExt.poke(Map, 251, 1);
		do MemoryExt.poke(Map, 254, 17);
		do MemoryExt.poke(Map, 255, 1);
		do MemoryExt.poke(Map, 271, 1);
		do MemoryExt.poke(Map, 287, 1);
		do MemoryExt.poke(Map, 302, 16);
		do MemoryExt.poke(Map, 303, 1);
		do MemoryExt.poke(Map, 319, 1);
		do MemoryExt.poke(Map, 328, 1);
		do MemoryExt.poke(Map, 335, 1);
		do MemoryExt.poke(Map, 344, 1);
		do MemoryExt.poke(Map, 351, 1);
		do MemoryExt.poke(Map, 360, 1);
		do MemoryExt.poke(Map, 366, 17);
		do MemoryExt.poke(Map, 367, 1);
		do MemoryExt.poke(Map, 376, 1);
		do MemoryExt.poke(Map, 383, 1);
		do MemoryExt.poke(Map, 392, 1);
		do MemoryExt.poke(Map, 398, 16);
		do MemoryExt.poke(Map, 399, 1);
		do MemoryExt.poke(Map, 415, 1);
		do MemoryExt.poke(Map, 431, 1);
		do MemoryExt.poke(Map, 446, 17);
		do MemoryExt.poke(Map, 447, 1);
		do MemoryExt.poke(Map, 463, 1);
		do MemoryExt.poke(Map, 479, 1);
		do MemoryExt.poke(Map, 495, 1);
		do MemoryExt.poke(Map, 511, 1);
		return this;
	}
	method int getPlatformsCount() { return PlatformsCount; }
	method int getObstaclesCount() { return ObstaclesCount; }
	method int getEnemiesCount() { return EnemiesCount; }
	method int getCollectablesCount() { return CollectablesCount; }
	method Array getPlatforms() { return Platforms; }
	method Array getObstacles() { return Obstacles; }
	method Array getEnemies() { return Enemies; }
	method Array getCollectables() { return Collectables; }
	method Character getCharacter() { return character; }
	method int getFinish() { return finish; }
	method Array getMap() { return Map; }
	method int getMapWidth() { return MapWidth; }
	method int getMapHeight() { return MapHeight; }
	method void dispose()
	{
		var int i;
		var Platform platform;
		var Obstacle obstacle;
		var Enemy enemy;
		var Collectable collectable;
		do character.dispose();
		let character = 0;
		do finish.dispose();
		let finish = 0;
		while (i < PlatformsCount)
		{
			let platform = Platforms[i];
			do platform.dispose();
			let platform = 0;
			let i = i + 1;
		}
		let PlatformsCount = 0;
		let i = 0;
		while (i < ObstaclesCount)
		{
			let obstacle = Obstacles[i];
			do obstacle.dispose();
			let obstacle = 0;
			let i = i + 1;
		}
		let ObstaclesCount = 0;
		let i = 0;
		while (i < EnemiesCount)
		{
			let enemy = Enemies[i];
			do enemy.dispose();
			let enemy = 0;
			let i = i + 1;
		}
		let EnemiesCount = 0;
		let i = 0;
		while (i < CollectablesCount)
		{
			let collectable = Collectables[i];
			do collectable.dispose();
			let collectable = 0;
			let i = i + 1;
		}
		let CollectablesCount = 0;
		if (PlatformsCount > 0)
		{
			do Platforms.dispose();
		}
		let Platforms = 0;
		if (ObstaclesCount > 0)
		{
			do Obstacles.dispose();
		}
		let Obstacles = 0;
		if (EnemiesCount > 0)
		{
			do Enemies.dispose();
		}
		let Enemies = 0;
		if (CollectablesCount > 0)
		{
			do Collectables.dispose();
		}
		let Collectables = 0;
		let i = 0;
		while (i < 2048)
		{
			let Map[i] = 0;
			let i = i + 1;
		}
		do Map.dispose();
		let Map = 0;
		let MapWidth = 0;
		let MapHeight = 0;
		do Memory.deAlloc(this);
		return;
	}
}
