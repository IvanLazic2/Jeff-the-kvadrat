class Level3
{
	field Character character;
	field Finish finish;
	field int PlatformsCount;
	field int ObstaclesCount;
	field int EnemiesCount;
	field int CollectablesCount;
	field int SpawnPointsCount;
	field Array Platforms;
	field Array Obstacles;
	field Array Enemies;
	field Array Collectables;
	field Array SpawnPoints;
	field Array Map;
	field int MapWidth;
	field int MapHeight;
	constructor Level3 new()
	{
		var int i;
		let character = Character.new(2, -8, false);
		let finish = Finish.new(127, 224);
		let PlatformsCount = 6;
		let ObstaclesCount = 1;
		let EnemiesCount = 1;
		let CollectablesCount = 0;
		let SpawnPointsCount = 1;
		let Platforms = Array.new(6);
		do MemoryExt.poke(Platforms, 0, Platform.new(0, 32, 4, 61));
		do MemoryExt.poke(Platforms, 1, Platform.new(21, 160, 4, 7));
		do MemoryExt.poke(Platforms, 2, Platform.new(13, 192, 4, 5));
		do MemoryExt.poke(Platforms, 3, Platform.new(31, 192, 4, 5));
		do MemoryExt.poke(Platforms, 4, Platform.new(0, 240, 4, 11));
		do MemoryExt.poke(Platforms, 5, Platform.new(38, 240, 4, 23));
		let Obstacles = Array.new(1);
		do MemoryExt.poke(Obstacles, 0, Obstacle.new(11, 240, 0, 0, 27));
		let Enemies = Array.new(1);
		do MemoryExt.poke(Enemies, 0, Enemy.new(39, 224, 1));
		let SpawnPoints = Array.new(1);
		do MemoryExt.poke(SpawnPoints, 0, SpawnPoint.new(3, 16));
		do character.setSpawnPointsCount(SpawnPointsCount);
		do character.setSpawnPoints(SpawnPoints);
		let MapWidth = 128;
		let MapHeight = 16;
		let Map = Array.new(2048);
		while (i < 2048)
		{
			let Map[i] = 0;
			let i = i + 1;
		}
		do MemoryExt.poke(Map, 2, 5);
		do MemoryExt.poke(Map, 15, 5);
		do MemoryExt.poke(Map, 18, 5);
		do MemoryExt.poke(Map, 31, 5);
		do MemoryExt.poke(Map, 34, 5);
		do MemoryExt.poke(Map, 47, 5);
		do MemoryExt.poke(Map, 50, 5);
		do MemoryExt.poke(Map, 63, 5);
		do MemoryExt.poke(Map, 66, 5);
		do MemoryExt.poke(Map, 79, 5);
		do MemoryExt.poke(Map, 82, 5);
		do MemoryExt.poke(Map, 95, 5);
		do MemoryExt.poke(Map, 98, 5);
		do MemoryExt.poke(Map, 111, 5);
		do MemoryExt.poke(Map, 114, 5);
		do MemoryExt.poke(Map, 127, 5);
		do MemoryExt.poke(Map, 130, 5);
		do MemoryExt.poke(Map, 143, 5);
		do MemoryExt.poke(Map, 146, 5);
		do MemoryExt.poke(Map, 159, 5);
		do MemoryExt.poke(Map, 162, 5);
		do MemoryExt.poke(Map, 175, 5);
		do MemoryExt.poke(Map, 178, 5);
		do MemoryExt.poke(Map, 191, 11);
		do MemoryExt.poke(Map, 194, 5);
		do MemoryExt.poke(Map, 207, 11);
		do MemoryExt.poke(Map, 210, 5);
		do MemoryExt.poke(Map, 220, 5);
		do MemoryExt.poke(Map, 223, 11);
		do MemoryExt.poke(Map, 226, 5);
		do MemoryExt.poke(Map, 236, 5);
		do MemoryExt.poke(Map, 239, 11);
		do MemoryExt.poke(Map, 242, 5);
		do MemoryExt.poke(Map, 252, 5);
		do MemoryExt.poke(Map, 255, 11);
		do MemoryExt.poke(Map, 258, 5);
		do MemoryExt.poke(Map, 268, 5);
		do MemoryExt.poke(Map, 271, 11);
		do MemoryExt.poke(Map, 274, 5);
		do MemoryExt.poke(Map, 284, 5);
		do MemoryExt.poke(Map, 287, 11);
		do MemoryExt.poke(Map, 290, 5);
		do MemoryExt.poke(Map, 303, 11);
		do MemoryExt.poke(Map, 306, 5);
		do MemoryExt.poke(Map, 319, 11);
		do MemoryExt.poke(Map, 322, 5);
		do MemoryExt.poke(Map, 335, 11);
		do MemoryExt.poke(Map, 338, 5);
		do MemoryExt.poke(Map, 346, 5);
		do MemoryExt.poke(Map, 351, 11);
		do MemoryExt.poke(Map, 354, 5);
		do MemoryExt.poke(Map, 362, 5);
		do MemoryExt.poke(Map, 367, 11);
		do MemoryExt.poke(Map, 370, 5);
		do MemoryExt.poke(Map, 378, 5);
		do MemoryExt.poke(Map, 383, 11);
		do MemoryExt.poke(Map, 386, 5);
		do MemoryExt.poke(Map, 394, 5);
		do MemoryExt.poke(Map, 399, 11);
		do MemoryExt.poke(Map, 402, 5);
		do MemoryExt.poke(Map, 410, 5);
		do MemoryExt.poke(Map, 415, 11);
		do MemoryExt.poke(Map, 418, 5);
		do MemoryExt.poke(Map, 426, 5);
		do MemoryExt.poke(Map, 431, 11);
		do MemoryExt.poke(Map, 434, 5);
		do MemoryExt.poke(Map, 442, 5);
		do MemoryExt.poke(Map, 447, 11);
		do MemoryExt.poke(Map, 450, 5);
		do MemoryExt.poke(Map, 463, 11);
		do MemoryExt.poke(Map, 466, 5);
		do MemoryExt.poke(Map, 479, 11);
		do MemoryExt.poke(Map, 482, 5);
		do MemoryExt.poke(Map, 495, 11);
		do MemoryExt.poke(Map, 498, 5);
		do MemoryExt.poke(Map, 508, 5);
		do MemoryExt.poke(Map, 511, 11);
		do MemoryExt.poke(Map, 514, 5);
		do MemoryExt.poke(Map, 524, 5);
		do MemoryExt.poke(Map, 527, 11);
		do MemoryExt.poke(Map, 530, 5);
		do MemoryExt.poke(Map, 540, 5);
		do MemoryExt.poke(Map, 543, 11);
		do MemoryExt.poke(Map, 546, 5);
		do MemoryExt.poke(Map, 556, 5);
		do MemoryExt.poke(Map, 559, 11);
		do MemoryExt.poke(Map, 562, 5);
		do MemoryExt.poke(Map, 572, 5);
		do MemoryExt.poke(Map, 575, 11);
		do MemoryExt.poke(Map, 578, 5);
		do MemoryExt.poke(Map, 591, 11);
		do MemoryExt.poke(Map, 594, 5);
		do MemoryExt.poke(Map, 607, 11);
		do MemoryExt.poke(Map, 610, 5);
		do MemoryExt.poke(Map, 623, 5);
		do MemoryExt.poke(Map, 626, 5);
		do MemoryExt.poke(Map, 639, 5);
		do MemoryExt.poke(Map, 642, 5);
		do MemoryExt.poke(Map, 655, 5);
		do MemoryExt.poke(Map, 658, 5);
		do MemoryExt.poke(Map, 671, 5);
		do MemoryExt.poke(Map, 674, 5);
		do MemoryExt.poke(Map, 687, 5);
		do MemoryExt.poke(Map, 690, 5);
		do MemoryExt.poke(Map, 703, 5);
		do MemoryExt.poke(Map, 706, 5);
		do MemoryExt.poke(Map, 719, 5);
		do MemoryExt.poke(Map, 722, 5);
		do MemoryExt.poke(Map, 735, 5);
		do MemoryExt.poke(Map, 738, 5);
		do MemoryExt.poke(Map, 751, 5);
		do MemoryExt.poke(Map, 754, 5);
		do MemoryExt.poke(Map, 767, 5);
		do MemoryExt.poke(Map, 770, 5);
		do MemoryExt.poke(Map, 783, 5);
		do MemoryExt.poke(Map, 786, 5);
		do MemoryExt.poke(Map, 799, 5);
		do MemoryExt.poke(Map, 802, 5);
		do MemoryExt.poke(Map, 815, 5);
		do MemoryExt.poke(Map, 818, 5);
		do MemoryExt.poke(Map, 831, 5);
		do MemoryExt.poke(Map, 834, 5);
		do MemoryExt.poke(Map, 847, 5);
		do MemoryExt.poke(Map, 850, 5);
		do MemoryExt.poke(Map, 863, 5);
		do MemoryExt.poke(Map, 866, 5);
		do MemoryExt.poke(Map, 879, 5);
		do MemoryExt.poke(Map, 882, 5);
		do MemoryExt.poke(Map, 895, 5);
		do MemoryExt.poke(Map, 898, 5);
		do MemoryExt.poke(Map, 911, 5);
		do MemoryExt.poke(Map, 914, 5);
		do MemoryExt.poke(Map, 927, 5);
		do MemoryExt.poke(Map, 930, 5);
		do MemoryExt.poke(Map, 943, 5);
		do MemoryExt.poke(Map, 946, 5);
		do MemoryExt.poke(Map, 959, 5);
		do MemoryExt.poke(Map, 962, 5);
		do MemoryExt.poke(Map, 975, 5);
		return this;
	}
	method int getPlatformsCount() { return PlatformsCount; }
	method int getObstaclesCount() { return ObstaclesCount; }
	method int getEnemiesCount() { return EnemiesCount; }
	method int getCollectablesCount() { return CollectablesCount; }
	method Array getPlatforms() { return Platforms; }
	method Array getObstacles() { return Obstacles; }
	method Array getEnemies() { return Enemies; }
	method Array getCollectables() { return Collectables; }
	method Character getCharacter() { return character; }
	method int getFinish() { return finish; }
	method Array getMap() { return Map; }
	method int getMapWidth() { return MapWidth; }
	method int getMapHeight() { return MapHeight; }
	method void dispose()
	{
		var int i;
		var Platform platform;
		var Obstacle obstacle;
		var Enemy enemy;
		var Collectable collectable;
		var SpawnPoint spawnPoint;
		do character.dispose();
		let character = 0;
		do finish.dispose();
		let finish = 0;
		while (i < PlatformsCount)
		{
			let platform = Platforms[i];
			do platform.dispose();
			let platform = 0;
			let i = i + 1;
		}
		let PlatformsCount = 0;
		let i = 0;
		while (i < ObstaclesCount)
		{
			let obstacle = Obstacles[i];
			do obstacle.dispose();
			let obstacle = 0;
			let i = i + 1;
		}
		let ObstaclesCount = 0;
		let i = 0;
		while (i < EnemiesCount)
		{
			let enemy = Enemies[i];
			do enemy.dispose();
			let enemy = 0;
			let i = i + 1;
		}
		let EnemiesCount = 0;
		let i = 0;
		while (i < CollectablesCount)
		{
			let collectable = Collectables[i];
			do collectable.dispose();
			let collectable = 0;
			let i = i + 1;
		}
		let CollectablesCount = 0;
		let i = 0;
		while (i < SpawnPointsCount)
		{
			let spawnPoint = SpawnPoints[i];
			do spawnPoint.dispose();
			let spawnPoint = 0;
			let i = i + 1;
		}
		let SpawnPointsCount = 0;
		if (PlatformsCount > 0)
		{
			do Platforms.dispose();
		}
		let Platforms = 0;
		if (ObstaclesCount > 0)
		{
			do Obstacles.dispose();
		}
		let Obstacles = 0;
		if (EnemiesCount > 0)
		{
			do Enemies.dispose();
		}
		let Enemies = 0;
		if (CollectablesCount > 0)
		{
			do Collectables.dispose();
		}
		let Collectables = 0;
		if (SpawnPointsCount > 0)
		{
			do SpawnPoints.dispose();
		}
		let SpawnPoints = 0;
		let i = 0;
		while (i < 2048)
		{
			let Map[i] = 0;
			let i = i + 1;
		}
		do Map.dispose();
		let Map = 0;
		let MapWidth = 0;
		let MapHeight = 0;
		do Memory.deAlloc(this);
		return;
	}
}
