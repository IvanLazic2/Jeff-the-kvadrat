class Sprite
{
	static Array Empty;

	function bool IsInScreen(int x)
	{
		return ((-1 < x) & (x < 32));
	}

	function void Draw(int memAddress, Array sprite, int width, int height, int currFrame, bool display, int x, int y)
	{
		var int i;
		var int j;
		var Array spriteHeight;
		var int tempMemAddress;

		let tempMemAddress = memAddress;

		while (j < height)
		{
			let spriteHeight = sprite[j];

			let tempMemAddress = memAddress - (j * 512);

			let i = 0;
			while (i < width)
			{
				if (Sprite.IsInScreen(x + i))
				{
					if (display)
					{
						do Sprite.drawBlock(tempMemAddress, spriteHeight[i], currFrame, x, y);
					}
					else
					{
						do Sprite.clearBlock(tempMemAddress, x, y);
					}
				}
				
				let tempMemAddress = tempMemAddress + 1;
				let i = i + 1;
			}

			let j = j + 1;
		}

		return;
	}

    function void drawBlock(int memAddress, Array sprite, int currFrame, int x, int y)
	{
		var int i;
		var int j;
		var Array frame;

		let frame = sprite[currFrame];

		if (~(frame = Empty))
		{
			while (i < 481)
			{
				do Memory.poke(memAddress + i, frame[j]);
				let j = j + 1;
				let i = i + 32;
			}
		}

		return;
	}

	function void clearBlock(int memAddress, int x, int y)
	{
		var int i;

        while (i < 481)
		{
			do Memory.poke(memAddress + i, 0);
            let i = i + 32;
		}

		return;
	}

	function void init()
	{
		var int i;

		let Empty = Array.new(16);
        while (i < 16)
        {
            let Empty[i] = 0;
            let i = i + 1;
        }

		return;
	}

	function Array getEmpty() { return Empty; }
}