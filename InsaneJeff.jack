class InsaneJeff
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int SpecialFramesCount;
	static int TotalFramesCount;
	static bool stopAnimation;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static int specialFrameTimer;
	static Array Frames;
	static int FrameSize;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
//////////////////////////////////////////
		let Width = 3;
		let Height = 2;
		let AnimationFramesCount = 1;
		let SpecialFramesCount = 0;
		let TotalFramesCount = 1;
		let FrameSize = Width * Height * 16;
		let Frames = Array.new(TotalFramesCount);
		let FramesMirrored = Array.new(TotalFramesCount);
		let Frame1 = Array.new(Width * Height * 16);
		let Frame1Mirrored = Array.new(Width * Height * 16);
		let Frame1[1] = -1;
		let Frame1[4] = -32767;
		let Frame1[6] = -2048;
		let Frame1[7] = -32767;
		let Frame1[8] = 31;
		let Frame1[9] = 1984;
		let Frame1[10] = -31711;
		let Frame1[11] = 992;
		let Frame1[12] = 56;
		let Frame1[13] = -31711;
		let Frame1[14] = 7168;
		let Frame1[15] = 4;
		let Frame1[16] = -31807;
		let Frame1[17] = 8192;
		let Frame1[18] = 2;
		let Frame1[19] = -32767;
		let Frame1[20] = 16384;
		let Frame1[21] = 2;
		let Frame1[22] = -32767;
		let Frame1[23] = 16384;
		let Frame1[24] = 1;
		let Frame1[25] = -32767;
		let Frame1[26] = ~32767;
		let Frame1[27] = 1;
		let Frame1[28] = -30687;
		let Frame1[29] = ~32767;
		let Frame1[30] = 1041;
		let Frame1[31] = -32191;
		let Frame1[32] = -30688;
		let Frame1[33] = 7010;
		let Frame1[34] = -31711;
		let Frame1[35] = 18136;
		let Frame1[36] = -8062;
		let Frame1[37] = -30703;
		let Frame1[38] = 16647;
		let Frame1[39] = 260;
		let Frame1[40] = -32767;
		let Frame1[41] = 8320;
		let Frame1[42] = 516;
		let Frame1[43] = -32767;
		let Frame1[44] = 8256;
		let Frame1[45] = 520;
		let Frame1[46] = -1;
		let Frame1[47] = 4128;
		let Frame1[48] = 520;
		let Frame1[50] = 2080;
		let Frame1[51] = 528;
		let Frame1[53] = 1040;
		let Frame1[54] = 528;
		let Frame1[56] = 528;
		let Frame1[57] = 544;
		let Frame1[59] = 272;
		let Frame1[60] = 544;
		let Frame1[62] = 136;
		let Frame1[63] = 1088;
		let Frame1[65] = 68;
		let Frame1[66] = 1088;
		let Frame1[68] = 68;
		let Frame1[69] = 2080;
		let Frame1[71] = 130;
		let Frame1[72] = 4128;
		let Frame1[74] = 258;
		let Frame1[75] = 4128;
		let Frame1[77] = 258;
		let Frame1[78] = 2240;
		let Frame1[80] = 140;
		let Frame1[81] = 1280;
		let Frame1[83] = 80;
		let Frame1[84] = 1280;
		let Frame1[86] = 80;
		let Frame1[87] = 1280;
		let Frame1[89] = 80;
		let Frame1[90] = 1280;
		let Frame1[92] = 80;
		let Frame1[93] = 512;
		let Frame1[95] = 32;
		let Frame1Mirrored[1] = -1;
		let Frame1Mirrored[4] = -32767;
		let Frame1Mirrored[6] = -2048;
		let Frame1Mirrored[7] = -32767;
		let Frame1Mirrored[8] = 31;
		let Frame1Mirrored[9] = 1984;
		let Frame1Mirrored[10] = -31711;
		let Frame1Mirrored[11] = 992;
		let Frame1Mirrored[12] = 56;
		let Frame1Mirrored[13] = -31711;
		let Frame1Mirrored[14] = 7168;
		let Frame1Mirrored[15] = 4;
		let Frame1Mirrored[16] = -31807;
		let Frame1Mirrored[17] = 8192;
		let Frame1Mirrored[18] = 2;
		let Frame1Mirrored[19] = -32767;
		let Frame1Mirrored[20] = 16384;
		let Frame1Mirrored[21] = 2;
		let Frame1Mirrored[22] = -32767;
		let Frame1Mirrored[23] = 16384;
		let Frame1Mirrored[24] = 1;
		let Frame1Mirrored[25] = -32767;
		let Frame1Mirrored[26] = ~32767;
		let Frame1Mirrored[27] = 1;
		let Frame1Mirrored[28] = -31727;
		let Frame1Mirrored[29] = ~32767;
		let Frame1Mirrored[30] = 1041;
		let Frame1Mirrored[31] = -32191;
		let Frame1Mirrored[32] = -30688;
		let Frame1Mirrored[33] = 7010;
		let Frame1Mirrored[34] = -31711;
		let Frame1Mirrored[35] = 18136;
		let Frame1Mirrored[36] = -8062;
		let Frame1Mirrored[37] = -30703;
		let Frame1Mirrored[38] = 16647;
		let Frame1Mirrored[39] = 260;
		let Frame1Mirrored[40] = -32767;
		let Frame1Mirrored[41] = 8320;
		let Frame1Mirrored[42] = 516;
		let Frame1Mirrored[43] = -32767;
		let Frame1Mirrored[44] = 8256;
		let Frame1Mirrored[45] = 1032;
		let Frame1Mirrored[46] = -1;
		let Frame1Mirrored[47] = 4160;
		let Frame1Mirrored[48] = 1040;
		let Frame1Mirrored[50] = 4160;
		let Frame1Mirrored[51] = 2080;
		let Frame1Mirrored[53] = 2112;
		let Frame1Mirrored[54] = 2112;
		let Frame1Mirrored[56] = 2112;
		let Frame1Mirrored[57] = 2176;
		let Frame1Mirrored[59] = 1088;
		let Frame1Mirrored[60] = 4352;
		let Frame1Mirrored[62] = 1088;
		let Frame1Mirrored[63] = 8704;
		let Frame1Mirrored[65] = 544;
		let Frame1Mirrored[66] = 8704;
		let Frame1Mirrored[68] = 544;
		let Frame1Mirrored[69] = 16640;
		let Frame1Mirrored[71] = 1040;
		let Frame1Mirrored[72] = 16512;
		let Frame1Mirrored[74] = 1032;
		let Frame1Mirrored[75] = 16512;
		let Frame1Mirrored[77] = 1032;
		let Frame1Mirrored[78] = 12544;
		let Frame1Mirrored[80] = 784;
		let Frame1Mirrored[81] = 2560;
		let Frame1Mirrored[83] = 160;
		let Frame1Mirrored[84] = 2560;
		let Frame1Mirrored[86] = 160;
		let Frame1Mirrored[87] = 2560;
		let Frame1Mirrored[89] = 160;
		let Frame1Mirrored[90] = 2560;
		let Frame1Mirrored[92] = 160;
		let Frame1Mirrored[93] = 1024;
		let Frame1Mirrored[95] = 64;
		let Frames[0] = Frame1;
		let FramesMirrored[0] = Frame1Mirrored;
		return;
	}
	function int getWidth() { return Width; }
	function int getHeight() { return Height; }
	function void CheckTimers()
	{
		if (animationTimer < 1)
		{
			do InsaneJeff.ChangeFrame();
			let animationTimer = animationDelay;
		}
		if (specialFrameTimer < 1)
		{
			let stopAnimation = false;
			let specialFrameTimer = 0;
		}
		return;
	}
	function void DecrementTimers()
	{
		let animationTimer = animationTimer - 1;
		let specialFrameTimer = specialFrameTimer - 1;
		return;
	}
	function void ChangeFrame()
	{
		if (~(stopAnimation | (AnimationFramesCount = 0)))
		{
			if (currFrame < (AnimationFramesCount - 1))
			{
				let currFrame = currFrame + 1;
			}
			else
			{
				let currFrame = 0;
			}
		}
		return;
	}
	function void DrawFrame(int memAddress, bool display, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], FrameSize, Width, Height, display, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], FrameSize, Width, Height, display, x, y);
		}
		return;
	}
}
