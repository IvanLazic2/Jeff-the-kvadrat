class SimpleBullet
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static Array Frames;
	static int FrameSize;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	static Array Frame2;
	static Array Frame2Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
//////////////////////////////////////////
		let Width = 1;
		let Height = 1;
		let AnimationFramesCount = 1;
		let FrameSize = 16;
		let Frames = Array.new(AnimationFramesCount);
		let FramesMirrored = Array.new(AnimationFramesCount);
		let Frame1 = Array.new(16);
		let Frame1Mirrored = Array.new(16);
		do MemoryExt.poke(Frame1, 7, 30720);
		do MemoryExt.poke(Frame1, 8, -30720);
		do MemoryExt.poke(Frame1, 9, 30720);
		do MemoryExt.poke(Frame1Mirrored, 7, 30);
		do MemoryExt.poke(Frame1Mirrored, 8, 17);
		do MemoryExt.poke(Frame1Mirrored, 9, 30);
		do MemoryExt.poke(Frames, 0, Frame1);
		do MemoryExt.poke(FramesMirrored, 0, Frame1Mirrored);
		return;
	}
	function int getWidth() { return Width; }
	function int getHeight() { return Height; }
	function void DrawFrame(int memAddress, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], FrameSize, Width, Height, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], FrameSize, Width, Height, x, y);
		}
		return;
	}
}
