class Bat
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static Array Frames;
	static int FrameSize;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	static Array Frame2;
	static Array Frame2Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
		let animationDelay = 4;
//////////////////////////////////////////
		let Width = 2;
		let Height = 1;
		let AnimationFramesCount = 2;
		let FrameSize = 32;
		let Frames = Array.new(AnimationFramesCount);
		let FramesMirrored = Array.new(AnimationFramesCount);
		let Frame1 = Array.new(32);
		let Frame1Mirrored = Array.new(32);
		do MemoryExt.poke(Frame1, 0, 12288);
		do MemoryExt.poke(Frame1, 1, 12);
		do MemoryExt.poke(Frame1, 2, 12288);
		do MemoryExt.poke(Frame1, 3, 12);
		do MemoryExt.poke(Frame1, 4, -4096);
		do MemoryExt.poke(Frame1, 5, 63);
		do MemoryExt.poke(Frame1, 6, -4096);
		do MemoryExt.poke(Frame1, 7, 63);
		do MemoryExt.poke(Frame1, 8, 15360);
		do MemoryExt.poke(Frame1, 9, 79);
		do MemoryExt.poke(Frame1, 10, 15360);
		do MemoryExt.poke(Frame1, 11, 207);
		do MemoryExt.poke(Frame1, 12, -256);
		do MemoryExt.poke(Frame1, 13, 255);
		do MemoryExt.poke(Frame1, 14, 16128);
		do MemoryExt.poke(Frame1, 15, 1008);
		do MemoryExt.poke(Frame1, 16, 16128);
		do MemoryExt.poke(Frame1, 17, 1008);
		do MemoryExt.poke(Frame1, 18, 3840);
		do MemoryExt.poke(Frame1, 19, 960);
		do MemoryExt.poke(Frame1, 20, 3840);
		do MemoryExt.poke(Frame1, 21, 960);
		do MemoryExt.poke(Frame1Mirrored, 0, 12288);
		do MemoryExt.poke(Frame1Mirrored, 1, 12);
		do MemoryExt.poke(Frame1Mirrored, 2, 12288);
		do MemoryExt.poke(Frame1Mirrored, 3, 12);
		do MemoryExt.poke(Frame1Mirrored, 4, -1024);
		do MemoryExt.poke(Frame1Mirrored, 5, 15);
		do MemoryExt.poke(Frame1Mirrored, 6, -1024);
		do MemoryExt.poke(Frame1Mirrored, 7, 15);
		do MemoryExt.poke(Frame1Mirrored, 8, -3584);
		do MemoryExt.poke(Frame1Mirrored, 9, 60);
		do MemoryExt.poke(Frame1Mirrored, 10, -3328);
		do MemoryExt.poke(Frame1Mirrored, 11, 60);
		do MemoryExt.poke(Frame1Mirrored, 12, -256);
		do MemoryExt.poke(Frame1Mirrored, 13, 255);
		do MemoryExt.poke(Frame1Mirrored, 14, 4032);
		do MemoryExt.poke(Frame1Mirrored, 15, 252);
		do MemoryExt.poke(Frame1Mirrored, 16, 4032);
		do MemoryExt.poke(Frame1Mirrored, 17, 252);
		do MemoryExt.poke(Frame1Mirrored, 18, 960);
		do MemoryExt.poke(Frame1Mirrored, 19, 240);
		do MemoryExt.poke(Frame1Mirrored, 20, 960);
		do MemoryExt.poke(Frame1Mirrored, 21, 240);
		do MemoryExt.poke(Frames, 0, Frame1);
		do MemoryExt.poke(FramesMirrored, 0, Frame1Mirrored);
		let Frame2 = Array.new(32);
		let Frame2Mirrored = Array.new(32);
		do MemoryExt.poke(Frame2, 0, 13184);
		do MemoryExt.poke(Frame2, 1, 1932);
		do MemoryExt.poke(Frame2, 2, 14208);
		do MemoryExt.poke(Frame2, 3, 1932);
		do MemoryExt.poke(Frame2, 4, -128);
		do MemoryExt.poke(Frame2, 5, 2047);
		do MemoryExt.poke(Frame2, 6, -128);
		do MemoryExt.poke(Frame2, 7, 2047);
		do MemoryExt.poke(Frame2, 8, 15872);
		do MemoryExt.poke(Frame2, 9, 463);
		do MemoryExt.poke(Frame2, 10, 12288);
		do MemoryExt.poke(Frame2, 11, 79);
		do MemoryExt.poke(Frame2, 12, -4096);
		do MemoryExt.poke(Frame2, 13, 127);
		do MemoryExt.poke(Frame2Mirrored, 0, 12768);
		do MemoryExt.poke(Frame2Mirrored, 1, 460);
		do MemoryExt.poke(Frame2Mirrored, 2, 12768);
		do MemoryExt.poke(Frame2Mirrored, 3, 492);
		do MemoryExt.poke(Frame2Mirrored, 4, -32);
		do MemoryExt.poke(Frame2Mirrored, 5, 511);
		do MemoryExt.poke(Frame2Mirrored, 6, -32);
		do MemoryExt.poke(Frame2Mirrored, 7, 511);
		do MemoryExt.poke(Frame2Mirrored, 8, -3200);
		do MemoryExt.poke(Frame2Mirrored, 9, 124);
		do MemoryExt.poke(Frame2Mirrored, 10, -3584);
		do MemoryExt.poke(Frame2Mirrored, 11, 12);
		do MemoryExt.poke(Frame2Mirrored, 12, -512);
		do MemoryExt.poke(Frame2Mirrored, 13, 15);
		do MemoryExt.poke(Frames, 1, Frame2);
		do MemoryExt.poke(FramesMirrored, 1, Frame2Mirrored);
		return;
	}
	function int getWidth() { return Width; }
	function int getHeight() { return Height; }
	function void CheckTimers()
	{
		if (animationTimer < 1)
		{
			do Bat.ChangeFrame();
			let animationTimer = animationDelay;
		}
		return;
	}
	function void DecrementTimers()
	{
		let animationTimer = animationTimer - 1;
		return;
	}
	function void ChangeFrame()
	{
		if (currFrame < (AnimationFramesCount - 1))
		{
			let currFrame = currFrame + 1;
		}
		else
		{
			let currFrame = 0;
		}
		return;
	}
	function void DrawFrame(int memAddress, bool display, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], FrameSize, Width, Height, display, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], FrameSize, Width, Height, display, x, y);
		}
		return;
	}
}
