class PQueue
{
    field List A;
    constructor PQueue new ()
    {
        let A = List.new();

        return this;
    } 

    method void enqueue (int element)
    {
        var int i;
        var Node iter;

        do A.push_front(element);

        return;
    }

    method int dequeue ()
    {
        if (empty())
        {
            return -10;
        }
        else
        {
            return A.pop_head();
        }
    }

    method void dispose ()
    {
        do A.dispose();
        do Memory.deAlloc(this);

        return;
    }

    method void clear ()
    {
        var int i;

        let i = 0;
        while (~(i = A.get_size()))
        {
            do dequeue();
        }

        return;
    }

    method int get_size ()
    {
        return A.get_size();
    }

    method void print ()
    {
        do A.print();

        return;
    }

    method bool empty()
    {
        return A.get_size() = 0;
    }
}