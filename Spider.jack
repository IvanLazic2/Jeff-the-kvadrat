class Spider
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int SpecialFramesCount;
	static int TotalFramesCount;
	static bool stopAnimation;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static int specialFrameTimer;
	static Array Frames;
	static int FrameSize;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
//////////////////////////////////////////
		let Width = 2;
		let Height = 1;
		let AnimationFramesCount = 1;
		let SpecialFramesCount = 0;
		let TotalFramesCount = 1;
		let FrameSize = Width * Height * 16;
		let Frames = Array.new(TotalFramesCount);
		let FramesMirrored = Array.new(TotalFramesCount);
		let Frame1 = Array.new(Width * Height * 16);
		let Frame1Mirrored = Array.new(Width * Height * 16);
		let Frame1[2] = 16384;
		let Frame1[4] = 17152;
		let Frame1[5] = 32;
		let Frame1[6] = 16896;
		let Frame1[7] = 48;
		let Frame1[8] = -58;
		let Frame1[9] = 24;
		let Frame1[10] = -32652;
		let Frame1[11] = 975;
		let Frame1[12] = 28;
		let Frame1[13] = 3694;
		let Frame1[14] = 16;
		let Frame1[15] = 2080;
		let Frame1[16] = 16;
		let Frame1[17] = 2240;
		let Frame1[18] = 48;
		let Frame1[19] = 4016;
		let Frame1[20] = 480;
		let Frame1[21] = 30;
		let Frame1[22] = -256;
		let Frame1[23] = 3;
		let Frame1Mirrored[3] = 2;
		let Frame1Mirrored[4] = 1024;
		let Frame1Mirrored[5] = 194;
		let Frame1Mirrored[6] = 3072;
		let Frame1Mirrored[7] = 66;
		let Frame1Mirrored[8] = 6144;
		let Frame1Mirrored[9] = 25599;
		let Frame1Mirrored[10] = -3136;
		let Frame1Mirrored[11] = 11777;
		let Frame1Mirrored[12] = 30320;
		let Frame1Mirrored[13] = 14336;
		let Frame1Mirrored[14] = 1040;
		let Frame1Mirrored[15] = 2048;
		let Frame1Mirrored[16] = 784;
		let Frame1Mirrored[17] = 2048;
		let Frame1Mirrored[18] = 3568;
		let Frame1Mirrored[19] = 3072;
		let Frame1Mirrored[20] = 30720;
		let Frame1Mirrored[21] = 1920;
		let Frame1Mirrored[22] = -16384;
		let Frame1Mirrored[23] = 255;
		let Frames[0] = Frame1;
		let FramesMirrored[0] = Frame1Mirrored;
		return;
	}
	function int getWidth() { return Width; }
	function int getHeight() { return Height; }
	function void CheckTimers()
	{
		if (animationTimer < 1)
		{
			do Spider.ChangeFrame();
			let animationTimer = animationDelay;
		}
		if (specialFrameTimer < 1)
		{
			let stopAnimation = false;
			let specialFrameTimer = 0;
		}
		return;
	}
	function void DecrementTimers()
	{
		let animationTimer = animationTimer - 1;
		let specialFrameTimer = specialFrameTimer - 1;
		return;
	}
	function void ChangeFrame()
	{
		if (~(stopAnimation | (AnimationFramesCount = 0)))
		{
			if (currFrame < (AnimationFramesCount - 1))
			{
				let currFrame = currFrame + 1;
			}
			else
			{
				let currFrame = 0;
			}
		}
		return;
	}
	function void DrawFrame(int memAddress, bool display, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], FrameSize, Width, Height, display, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], FrameSize, Width, Height, display, x, y);
		}
		return;
	}
}
