class Spider
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static Array Frames;
	static int FrameSize;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
//////////////////////////////////////////
		let Width = 2;
		let Height = 1;
		let AnimationFramesCount = 1;
		let FrameSize = 32;
		let Frames = Array.new(AnimationFramesCount);
		let FramesMirrored = Array.new(AnimationFramesCount);
		let Frame1 = Array.new(32);
		let Frame1Mirrored = Array.new(32);
		do MemoryExt.poke(Frame1, 0, -1);
		do MemoryExt.poke(Frame1, 1, -1);
		do MemoryExt.poke(Frame1, 2, -1);
		do MemoryExt.poke(Frame1, 3, -1);
		do MemoryExt.poke(Frame1, 4, -1);
		do MemoryExt.poke(Frame1, 5, -1);
		do MemoryExt.poke(Frame1, 6, -1);
		do MemoryExt.poke(Frame1, 7, -1);
		do MemoryExt.poke(Frame1, 8, -1);
		do MemoryExt.poke(Frame1, 9, -1);
		do MemoryExt.poke(Frame1, 10, -1);
		do MemoryExt.poke(Frame1, 11, -1);
		do MemoryExt.poke(Frame1, 12, -1);
		do MemoryExt.poke(Frame1, 13, -1);
		do MemoryExt.poke(Frame1, 14, -1);
		do MemoryExt.poke(Frame1, 15, -1);
		do MemoryExt.poke(Frame1, 16, -1);
		do MemoryExt.poke(Frame1, 17, -1);
		do MemoryExt.poke(Frame1, 18, -1);
		do MemoryExt.poke(Frame1, 19, -1);
		do MemoryExt.poke(Frame1, 20, -1);
		do MemoryExt.poke(Frame1, 21, -1);
		do MemoryExt.poke(Frame1, 22, -1);
		do MemoryExt.poke(Frame1, 23, -1);
		do MemoryExt.poke(Frame1, 24, -1);
		do MemoryExt.poke(Frame1, 25, -1);
		do MemoryExt.poke(Frame1, 26, -1);
		do MemoryExt.poke(Frame1, 27, -1);
		do MemoryExt.poke(Frame1, 28, -1);
		do MemoryExt.poke(Frame1, 29, -1);
		do MemoryExt.poke(Frame1, 30, -1);
		do MemoryExt.poke(Frame1, 31, -1);
		do MemoryExt.poke(Frame1Mirrored, 0, -1);
		do MemoryExt.poke(Frame1Mirrored, 1, -1);
		do MemoryExt.poke(Frame1Mirrored, 2, -1);
		do MemoryExt.poke(Frame1Mirrored, 3, -1);
		do MemoryExt.poke(Frame1Mirrored, 4, -1);
		do MemoryExt.poke(Frame1Mirrored, 5, -1);
		do MemoryExt.poke(Frame1Mirrored, 6, -1);
		do MemoryExt.poke(Frame1Mirrored, 7, -1);
		do MemoryExt.poke(Frame1Mirrored, 8, -1);
		do MemoryExt.poke(Frame1Mirrored, 9, -1);
		do MemoryExt.poke(Frame1Mirrored, 10, -1);
		do MemoryExt.poke(Frame1Mirrored, 11, -1);
		do MemoryExt.poke(Frame1Mirrored, 12, -1);
		do MemoryExt.poke(Frame1Mirrored, 13, -1);
		do MemoryExt.poke(Frame1Mirrored, 14, -1);
		do MemoryExt.poke(Frame1Mirrored, 15, -1);
		do MemoryExt.poke(Frame1Mirrored, 16, -1);
		do MemoryExt.poke(Frame1Mirrored, 17, -1);
		do MemoryExt.poke(Frame1Mirrored, 18, -1);
		do MemoryExt.poke(Frame1Mirrored, 19, -1);
		do MemoryExt.poke(Frame1Mirrored, 20, -1);
		do MemoryExt.poke(Frame1Mirrored, 21, -1);
		do MemoryExt.poke(Frame1Mirrored, 22, -1);
		do MemoryExt.poke(Frame1Mirrored, 23, -1);
		do MemoryExt.poke(Frame1Mirrored, 24, -1);
		do MemoryExt.poke(Frame1Mirrored, 25, -1);
		do MemoryExt.poke(Frame1Mirrored, 26, -1);
		do MemoryExt.poke(Frame1Mirrored, 27, -1);
		do MemoryExt.poke(Frame1Mirrored, 28, -1);
		do MemoryExt.poke(Frame1Mirrored, 29, -1);
		do MemoryExt.poke(Frame1Mirrored, 30, -1);
		do MemoryExt.poke(Frame1Mirrored, 31, -1);
		do MemoryExt.poke(Frames, 0, Frame1);
		do MemoryExt.poke(FramesMirrored, 0, Frame1Mirrored);
		return;
	}
	function int getWidth() { return Width; }
	function int getHeight() { return Height; }
	function void DrawFrame(int memAddress, bool display, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], FrameSize, Width, Height, display, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], FrameSize, Width, Height, display, x, y);
		}
		return;
	}
}
