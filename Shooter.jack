class Shooter
{
	static int Width;
	static int Height;
	static int AnimationFramesCount;
	static int SpecialFramesCount;
	static int TotalFramesCount;
	static bool stopAnimation;
	static int currFrame;
	static int animationTimer;
	static int animationDelay;
	static int specialFrameTimer;
	static Array Frames;
	static Array FramesMirrored;
	static Array Frame1;
	static Array Frame1Mirrored;
	static Array Frame1Row0;
	static Array Frame1Row0Mirrored;
	static Array Frame1Part00;
	static Array Frame1Part00Mirrored;
	static Array Frame1Row1;
	static Array Frame1Row1Mirrored;
	static Array Frame1Part10;
	static Array Frame1Part10Mirrored;
	function void init()
	{
///////////////// CONFIG /////////////////
//////////////////////////////////////////
		let Width = 1;
		let Height = 2;
		let AnimationFramesCount = 1;
		let SpecialFramesCount = 0;
		let TotalFramesCount = 1;
		let Frames = Array.new(TotalFramesCount);
		let FramesMirrored = Array.new(TotalFramesCount);
		let Frame1 = Array.new(Height);
		let Frame1Mirrored = Array.new(Height);
		let Frame1Row0 = Array.new(Width);
		let Frame1Row0Mirrored = Array.new(Width);
		let Frame1Part00 = Array.new(16);
		let Frame1Part00Mirrored = Array.new(16);
		let Frame1Part00[0] = 7200;
		let Frame1Part00[1] = 2016;
		let Frame1Part00[2] = 4096;
		let Frame1Part00[3] = 4128;
		let Frame1Part00[4] = 4128;
		let Frame1Part00[5] = 4128;
		let Frame1Part00[6] = 4128;
		let Frame1Part00[7] = 4128;
		let Frame1Part00[8] = 4128;
		let Frame1Part00[9] = 4128;
		let Frame1Part00[10] = 4128;
		let Frame1Part00[11] = 4128;
		let Frame1Part00[12] = 4128;
		let Frame1Part00[13] = 4128;
		let Frame1Part00[14] = 4140;
		let Frame1Part00[15] = 7736;
		let Frame1Part00Mirrored[0] = 1080;
		let Frame1Part00Mirrored[1] = 2016;
		let Frame1Part00Mirrored[2] = 8;
		let Frame1Part00Mirrored[3] = 1032;
		let Frame1Part00Mirrored[4] = 1032;
		let Frame1Part00Mirrored[5] = 1032;
		let Frame1Part00Mirrored[6] = 1032;
		let Frame1Part00Mirrored[7] = 1032;
		let Frame1Part00Mirrored[8] = 1032;
		let Frame1Part00Mirrored[9] = 1032;
		let Frame1Part00Mirrored[10] = 1032;
		let Frame1Part00Mirrored[11] = 1032;
		let Frame1Part00Mirrored[12] = 1032;
		let Frame1Part00Mirrored[13] = 1032;
		let Frame1Part00Mirrored[14] = 13320;
		let Frame1Part00Mirrored[15] = 7288;
		let Frame1Row0[0] = Frame1Part00;
		let Frame1Row0Mirrored[0] = Frame1Part00Mirrored;
		let Frame1[0] = Frame1Row0;
		let Frame1Mirrored[0] = Frame1Row0Mirrored;
		let Frame1Row1 = Array.new(Width);
		let Frame1Row1Mirrored = Array.new(Width);
		let Frame1Part10 = Array.new(16);
		let Frame1Part10Mirrored = Array.new(16);
		let Frame1Part10[0] = 384;
		let Frame1Part10[1] = 4064;
		let Frame1Part10[2] = 2208;
		let Frame1Part10[3] = 2272;
		let Frame1Part10[4] = 3968;
		let Frame1Part10[6] = 8167;
		let Frame1Part10[7] = 4164;
		let Frame1Part10[8] = 4222;
		let Frame1Part10[9] = 4164;
		let Frame1Part10[10] = 4160;
		let Frame1Part10[11] = 4192;
		let Frame1Part10[12] = 4128;
		let Frame1Part10[13] = 4128;
		let Frame1Part10[14] = 4128;
		let Frame1Part10[15] = 4128;
		let Frame1Part10Mirrored[0] = 384;
		let Frame1Part10Mirrored[1] = 2032;
		let Frame1Part10Mirrored[2] = 1296;
		let Frame1Part10Mirrored[3] = 1808;
		let Frame1Part10Mirrored[4] = 496;
		let Frame1Part10Mirrored[6] = -6152;
		let Frame1Part10Mirrored[7] = 8712;
		let Frame1Part10Mirrored[8] = 32264;
		let Frame1Part10Mirrored[9] = 8712;
		let Frame1Part10Mirrored[10] = 520;
		let Frame1Part10Mirrored[11] = 1544;
		let Frame1Part10Mirrored[12] = 1032;
		let Frame1Part10Mirrored[13] = 1032;
		let Frame1Part10Mirrored[14] = 1032;
		let Frame1Part10Mirrored[15] = 1032;
		let Frame1Row1[0] = Frame1Part10;
		let Frame1Row1Mirrored[0] = Frame1Part10Mirrored;
		let Frame1[1] = Frame1Row1;
		let Frame1Mirrored[1] = Frame1Row1Mirrored;
		let Frames[0] = Frame1;
		let FramesMirrored[0] = Frame1Mirrored;
		return;
	}
	function void CheckTimers()
	{
		if (animationTimer < 1)
		{
			do Shooter.ChangeFrame();
			let animationTimer = animationDelay;
		}
		if (specialFrameTimer < 1)
		{
			let stopAnimation = false;
			let specialFrameTimer = 0;
		}
		return;
	}
	function void DecrementTimers()
	{
		let animationTimer = animationTimer - 1;
		let specialFrameTimer = specialFrameTimer - 1;
		return;
	}
	function void ChangeFrame()
	{
		if (~(stopAnimation | (AnimationFramesCount = 0)))
		{
			if (currFrame < (AnimationFramesCount - 1))
			{
				let currFrame = currFrame + 1;
			}
			else
			{
				let currFrame = 0;
			}
		}
		return;
	}
	function void DrawFrame(int memAddress, bool display, bool mirrored, int x, int y)
	{
		if (mirrored)
		{
			do Sprite.Draw(memAddress, FramesMirrored[currFrame], Width, Height, display, x, y);
		}
		else
		{
			do Sprite.Draw(memAddress, Frames[currFrame], Width, Height, display, x, y);
		}
		return;
	}
}
